apply plugin: 'com.android.application'

android {
    namespace "com.konovalovaleks.resl"
    compileSdkVersion 34
    ndkVersion "27.0.12077973"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 34
        versionCode 1
        versionName "1.1.1"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_APP_PLATFORM=android-19", "-DANDROID_STL=c++_static"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("keystore/keystore_config")

            if (keystorePropsFile.exists()) {
                file("keystore/keystore_config").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file("keystore/resl_keystore.jks")
                storePassword System.getenv('SIGNING_STORE_PASSWORD')
                keyAlias System.getenv('SIGNING_KEY_ALIAS')
                keyPassword System.getenv('SIGNING_KEY_PASSWORD')
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        tasks["merge${variant.name.capitalize()}Assets"]
            .dependsOn("externalNativeBuild${variant.name.capitalize()}")
    }
    lint {
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path "../../CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
